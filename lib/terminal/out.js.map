{"version":3,"sources":["out.es6"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;qBAmBK,OAAO;;;;4BAIlB,kBAAkB;;AAEzB,IAAI,WAAW,GAAG,SAAd,WAAW,GAAS;AACpB,WAAO,CAAC,GAAG,CAAE,SAAS,CAAC,CAAC;AACxB,WAAO,CAAC,GAAG,CAAE,SAAS,CAAC,CAAC;AACxB,WAAO,CAAC,GAAG,CAAE,0BAA0B,CAAE,CAAC;AAC1C,WAAO,CAAC,GAAG,CAAE,4BAA4B,CAAE,CAAC;AAC5C,WAAO,CAAC,GAAG,CAAE,2BAA2B,CAAE,CAAC;AAC3C,WAAO,CAAC,GAAG,CAAE,uBAAuB,CAAE,CAAC;AACvC,WAAO,CAAC,GAAG,CAAE,qBAAqB,CAAE,CAAC;AACrC,WAAO,CAAC,GAAG,CAAE,wBAAwB,CAAC,CAAC;AACvC,WAAO,CAAC,GAAG,CAAE,sBAAsB,CAAE,CAAC;AACtC,WAAO,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC;CACrB,CAAC;;AAEF,IAAI,WAAW,GAAG,SAAd,WAAW,CAAK,IAAI,EAAM;AAC1B,WAAO,CAAC,GAAG,CAAE,mBAAM,KAAK,CAAE,IAAI,CAAC,WAAW,EAAE,CAAE,CAAE,CAAC;CACpD,CAAC;;AAEF,IAAI,KAAK,GAAG,SAAR,KAAK,CAAK,WAAW,EAAE,IAAI,EAAM;AACjC,QAAI,KAAK,GAAG,IAAI,CAAC,KAAK,eAtBtB,eAAe,CAsB0B,CAAC;;AAE1C,QAAK,KAAK,CAAC,MAAM,IAAI,CAAC,EAAG;AACrB,eAAO,CAAC,GAAG,CACP,IAAI,GACJ,mBAAM,KAAK,CAAE,WAAW,CAAC,WAAW,EAAE,CAAE,GAAG,IAAI,GAC/C,mBAAM,SAAS,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,GAC7B,mBAAM,OAAO,CAAE,KAAK,CAAE,GACpB,KAAK,CAAE,CAAC,CAAE,CAAC,OAAO,eA7B5B,oBAAoB,EA6BgC,mBAAM,OAAO,CAAE,KAAK,CAAE,CAAE,AAAE,GACtE,mBAAM,OAAO,CAAE,OAAO,CAAE,GAAG,GAAG,CACjC,CAAC;;AAEF,eAAO;KACV;;AAED,WAAO,CAAC,GAAG,CACP,IAAI,GACJ,mBAAM,KAAK,CAAE,WAAW,CAAC,WAAW,EAAE,CAAE,GACxC,IAAI,GACJ,IAAI,CACP,CAAC;CACL,CAAC;;AAEF,IAAI,UAAU,GAAG,SAAb,UAAU,CAAK,WAAW,EAAE,IAAI,EAAM;AACtC,SAAK,CAAE,WAAW,EACd,mBAAM,GAAG,CAAC,SAAS,CAAC,IAAI,CAAE,UAAU,CAAE,GACtC,GAAG,GACH,mBAAM,GAAG,CAAE,IAAI,CAAE,CACpB,CAAC;CACL,CAAC;;AAEF,IAAI,UAAU,GAAG,SAAb,UAAU;WAAS,OAAO,CAAC,GAAG,CAAE,EAAE,CAAE;CAAA,CAAC;;QAEhC,KAAK,GAAL,KAAK;QAAE,UAAU,GAAV,UAAU;QAAE,UAAU,GAAV,UAAU;QAAE,WAAW,GAAX,WAAW;QAAE,WAAW,GAAX,WAAW","file":"out.js","sourcesContent":["'use strict';\n\n/*    _,                            ,--.   ,---.\n *   /(_                     ,---.  `--'  /  .-'\n *  |   '-._        . ' .   (  .-'  ,--.  |  `-,\n *  \\    ,-.)      -= * =- .-'  `)  |  |  |  .-'\n *   \\((` .(        '/. '  `----'   `--'  `--'\n *    )\\  _/        /         just like magic\n * .-'   '--.      /\n * \\,         \\   /|\n *  ';,_) _)'\\ \\,//    This program is distributed\n *   `\\   (   '._/   under the terms of the MIT license.\n *    |  . '.\n *    |      \\   Please see the `LICENSE.md` file for details.\n *    |  \\|   |\n *     \\  |  /    Send your comments and suggestions to…\n *      '.| /      <https://github.com/v0lkan/sif/issues>.\n */\n\nimport chalk from 'chalk';\nimport {\n    MATCH_DELIMITER, \n    MATCH_TAGS_DELIMITER \n} from '../config/regexp';\n\nlet printBanner = () => {\n    console.log( \"     _,\");\n    console.log( \"    /(_\");\n    console.log( \"   |   '-._        . ' .\" );\n    console.log( \"   \\\\    ,-.)      -= * =-\" );\n    console.log( \"    \\\\((` .(        '/. '\" );\n    console.log( \"     )\\\\  _/        /\" );\n    console.log( \"  .-'   '--.      /\" );\n    console.log( \"  \\\\,         \\\\   /| \");\n    console.log( \"   ';,_) _)'\\\\ \\\\,//\" );\n    console.log( \"\" );\n};\n\nlet printHeader = ( text ) => {\n    console.log( chalk.green( text.toUpperCase() ) );\n};\n\nlet print = ( commandName, text ) => {\n    let parts = text.split( MATCH_DELIMITER );\n\n    if ( parts.length >= 2 ) {\n        console.log(\n            '  ' +\n            chalk.green( commandName.toUpperCase() ) + ': ' +\n            chalk.underline( parts[ 0 ] ) +\n            chalk.magenta( ' (\"' ) + \n            ( parts[ 1 ].replace( MATCH_TAGS_DELIMITER, chalk.magenta( ' ««' ) ) ) + \n            chalk.magenta( '»» \")' ) + '.'\n        );\n\n        return;\n    }\n\n    console.log(\n        '  ' +\n        chalk.green( commandName.toUpperCase() ) +\n        ': ' +\n        text\n    );\n};\n\nlet printError = ( commandName, text ) => {\n    print( commandName,\n        chalk.red.underline.bold( 'ERROR ->' ) +\n        ' ' +\n        chalk.red( text )\n    );\n};\n\nlet printBlank = () => console.log( '' );\n\nexport { print, printBlank, printError, printHeader, printBanner };\n\n"]}