{"version":3,"sources":["sif-update.es6"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;yBAmBO,WAAW;;;;sBACZ,QAAQ;;;;oBACR,MAAM;;kBAC0C,IAAI;;8BAEc,qBAAqB;;AAE1G,IAAM,OAAO,GAAG,QAAQ,CAAC;AACzB,IAAM,UAAU,GAAG,UANX,IAAI,EAMY,SAAS,EAAE,mBAAmB,CAAC,CAAC;;AAExD,uBAAQ,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;AAE5B,IAAI,QAAQ,GAAG,yBAAO,QATd,gBAAgB,EASG,UAAU,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC,CAAC,CAAC;;AAE5D,oBAT+B,KAAK,EAS9B,OAAO,EAAE,2CAA2C,CAAC,CAAC;;AAE5D,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAI,EAAK;AAC1B,MAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AACrC,wBAbmD,UAAU,EAavD,OAAO,8BAA4B,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,OAAI,CAAC;;AAE7E,WAAO;GACV;;;;;CAMJ,CAAC,CAAC;;;;;;;AAOH,oBA7BsC,UAAU,GA6BzC,CAAC","file":"sif-update.js","sourcesContent":["#!/usr/bin/env node\n\n'use strict';\n\n/*    _,                            ,--.   ,---.\n *   /(_                     ,---.  `--'  /  .-'\n *  |   '-._        . ' .   (  .-'  ,--.  |  `-,\n *  \\    ,-.)      -= * =- .-'  `)  |  |  |  .-'\n *   \\((` .(        '/. '  `----'   `--'  `--'\n *    )\\  _/        /         just like magic\n * .-'   '--.      /\n * \\,         \\   /|\n *  ';,_) _)'\\ \\,//    This program is distributed\n *   `\\   (   '._/   under the terms of the MIT license.\n *    |  . '.\n *    |      \\   Please see the `LICENSE.md` file for details.\n *    |  \\|   |\n *     \\  |  /    Send your comments and suggestions to…\n *      '.| /      <https://github.com/v0lkan/sif/issues>.\n */\n\nimport program from 'commander';\nimport byline from 'byline';\nimport {join} from 'path';\nimport {createReadStream as read, createWriteStream as write} from 'fs';\n\nimport {printHeader as header, print, printBlank as blank, printError as error} from '../lib/terminal/out';\n\nconst COMMAND = 'update';\nconst INDEX_FILE = join(__dirname, '../data/index.idx');\n\nprogram.parse(process.argv);\n\nlet inStream = byline(read(INDEX_FILE, {encoding: 'utf8'}));\n\nprint(COMMAND, 'This may take a while. Please be patient…');\n\ninStream.on('data', (line) => {\n    if ( line.split('<::sif::>').length > 2) {\n        error(COMMAND, `badly-formatted line: \"${line.replace(/sif/g, '__sif__')}\"`);\n\n        return;\n    }\n\n\n    //console.log( line.indexOf('<::sif::>') );\n\n   // print(COMMAND, 'bazinga');\n});\n\n// For each line in index\n// check if it is processed already\n// if not process it and apend the result to a temp file.\n// concat index and temp file, sort the result and write it back to index.\n\nblank();\n"]}