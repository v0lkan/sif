{"version":3,"sources":["sif-update.es6"],"names":[],"mappings":"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","file":"sif-update.js","sourcesContent":["#!/usr/bin/env node\n\n'use strict';\n\n/*    _,                            ,--.   ,---.\n *   /(_                     ,---.  `--'  /  .-'\n *  |   '-._        . ' .   (  .-'  ,--.  |  `-,\n *  \\    ,-.)      -= * =- .-'  `)  |  |  |  .-'\n *   \\((` .(        '/. '  `----'   `--'  `--'\n *    )\\  _/        /         just like magic\n * .-'   '--.      /\n * \\,         \\   /|\n *  ';,_) _)'\\ \\,//    This program is distributed\n *   `\\   (   '._/   under the terms of the MIT license.\n *    |  . '.\n *    |      \\   Please see the `LICENSE.md` file for details.\n *    |  \\|   |\n *     \\  |  /    Send your comments and suggestions to…\n *      '.| /      <https://github.com/v0lkan/sif/issues>.\n */\n\nimport program from 'commander';\nimport byline from 'byline';\nimport request from 'request';\nimport { join } from 'path';\nimport { spawn } from 'child_process';\nimport { decodeHTML as decode } from 'entities';\nimport { createReadStream as read, createWriteStream as write } from 'fs';\nimport { print, printError as error } from '../lib/terminal/out';\nimport {\n    PROCESS_TMP_EXISTING_FILE,\n    PROCESS_TMP_PROCESSED_FILE,\n    INDEX_FILE\n} from '../lib/config/files';\nimport {\n    noTitleFoundForUrl\n} from '../lib/config/message';\nimport {\n    DELIMITER,\n    TAGS_DELIMITER,\n    DELIMITER_REPLACEMENT\n} from '../lib/config/constants';\nimport {\n    MATCH_ALL_DELIMITERS,\n    MATCH_ALL_WHITESPACES,\n    MATCH_PAGE_TITLE\n} from '../lib/config/regexp';\n\nconst COMMAND = 'update';\nconst SUCCESS = 200;\n\nprogram.parse( process.argv );\n\n// TODO: this file needs some cleanup.\n\nprint( COMMAND, 'Started updating the index… This may take a while. Please be patient…' );\n\nlet copyAssets = () => {\n\n    // TODO: this is repeated; move it to a module.\n    // TODO: sort can do concatanetion, no need to pipe with cat.\n    let cat = spawn( 'cat', [\n        PROCESS_TMP_EXISTING_FILE,\n        PROCESS_TMP_PROCESSED_FILE]\n    );\n    let sort = spawn( 'sort', [ '-u' ] );\n\n    let indexWriteStream = write( INDEX_FILE, { encoding: 'utf8' } );\n\n    sort.stdout.pipe( indexWriteStream );\n\n    cat.stdout.on( 'data', ( line ) => sort.stdin.write( line ) );\n    cat.stdout.on( 'end', () => sort.stdin.end() );\n\n    sort.stdout.on( 'end', () => indexWriteStream.end() );\n    sort.stdout.on( 'end',\n        () => print( COMMAND, 'Index file has been successfully updated.' )\n    );\n};\n\nlet backup = spawn( 'cp', [ INDEX_FILE, INDEX_FILE + '.backup' ] );\n\nlet fsOptions = { encoding: 'utf8' };\n\nbackup.stdout.on( 'end', () => {\n    let inStream = byline( read( INDEX_FILE, fsOptions ) );\n\n    let tmpExistingFileWriteStream = write( PROCESS_TMP_EXISTING_FILE, fsOptions );\n    let tmpProcessedFileWriteStream = write( PROCESS_TMP_PROCESSED_FILE, fsOptions );\n\n    // can be done with promises too.\n    let remainingMetaDataRequests = 0;\n    let inStreamEnded = false;\n\n    let tryPersistTemporaryData = null;\n\n    tryPersistTemporaryData = () => {\n        if ( !inStreamEnded || remainingMetaDataRequests !== 0 ) { return; }\n\n        let copyAssets = () => {\n            let cat = spawn( 'cat', [ PROCESS_TMP_EXISTING_FILE, PROCESS_TMP_PROCESSED_FILE ] );\n            let sort = spawn( 'sort', [ '-u' ] );\n\n            let indexWriteStream = write( INDEX_FILE, fsOptions );\n\n            cat.stdout.pipe( sort.stdin );\n            sort.stdout.pipe( indexWriteStream );\n\n            indexWriteStream.on( 'finish', () => print( COMMAND, 'Done!' ) );\n        };\n\n        let maybeCopyAssets = null;\n        let counter = 2;\n\n        maybeCopyAssets = () => {\n            counter--;\n\n            if ( counter === 0 ) {\n                copyAssets();\n            }\n\n            maybeCopyAssets = () => {};\n        };\n\n        // TODO: this part \"begs\" for promises.\n        tmpProcessedFileWriteStream.on( 'finish', maybeCopyAssets );\n        tmpExistingFileWriteStream.on( 'finish', maybeCopyAssets );\n\n        tmpProcessedFileWriteStream.end();\n        tmpExistingFileWriteStream.end();\n\n        tryPersistTemporaryData = () => {};\n    };\n\n    inStream.on( 'data', ( line ) => {\n\n        // TODO: to a util library function.\n        let occurrences = line.split( DELIMITER ).length - 1;\n        let needsProcessing = occurrences === 0;\n        let alreadyProcessed = occurrences === 1;\n        let malformed = !needsProcessing && !alreadyProcessed;\n\n        if ( malformed ) {\n            error(\n                COMMAND,\n                `badly-formatted line: \"${line.replace( MATCH_ALL_DELIMITERS, DELIMITER_REPLACEMENT )}\"`\n            );\n\n            return;\n        }\n\n        if ( needsProcessing ) {\n            remainingMetaDataRequests++;\n\n            let url = line.replace(TAGS_DELIMITER, '').trim();\n\n            // {gzip: true} to add an `Accept-Encoding` header to the request.\n            // Although `request` library does automatic gzip decoding, certain websites\n            // get confused if the header is not present in the initial request.\n            request(\n                { method: 'GET', 'uri': url, gzip: true }, \n                ( err, response, body ) => {\n                    remainingMetaDataRequests--;\n\n                    if ( err || response.statusCode !== SUCCESS ) {\n                        tryPersistTemporaryData();\n\n                        return;\n                    }\n\n                    let replaced = body.replace( MATCH_ALL_WHITESPACES, ' ' );\n                    let result = MATCH_PAGE_TITLE.exec( replaced );\n\n                    if ( !result ) {\n                        error( COMMAND, `Cannot find title in ${url}.` );\n\n                        tmpExistingFileWriteStream.write( \n                            decode( `${url} ${TAGS_DELIMITER}\\n` ) \n                        );\n\n                        tryPersistTemporaryData();\n\n                        return;\n                    }\n\n                    let title = result[ 1 ];\n\n                    if ( title ) {\n                        tmpProcessedFileWriteStream.write(\n                            decode( `${url} ${DELIMITER} ${title.trim()} ${TAGS_DELIMITER}\\n` ) \n                        );\n                    } else {\n                        error( COMMAND, noTitleFoundForUrl( url ) ) ;\n\n                        tmpExistingFileWriteStream.write(\n                            decode( `${url} ${TAGS_DELIMITER}\\n` )\n                        );\n                    }\n\n                    tryPersistTemporaryData();\n                }\n            );\n\n            return;\n        }\n\n        tmpExistingFileWriteStream.write( decode( `${line.trim()}\\n` ) );\n    } );\n\n    inStream.on( 'end', () => {\n        inStreamEnded = true;\n\n        // on `end`, all the data is consumed.\n        tryPersistTemporaryData();\n    });\n} );\n\n"]}